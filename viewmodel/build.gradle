apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion = project.ext.sharedCompileSdkVersion
    buildToolsVersion = project.ext.sharedBuildToolsVersion


    defaultConfig {
        minSdkVersion project.ext.sharedMinSdkVersion
        targetSdkVersion project.ext.sharedTargetSdkVersion
        versionCode project.ext.appVersionCode
        versionName project.ext.appVersionName

        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    androidExtensions {
        experimental = true
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    api project(':core')
    //DI
    implementation "org.koin:koin-android-viewmodel:${versions.koin}"


    //AAC libraries
    api "androidx.lifecycle:lifecycle-extensions:${versions.lifecycleLibrary}"
    kapt "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycleLibrary}"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycleLibrary}"
    kapt "androidx.databinding:databinding-compiler:${versions.binding}"

    //unit tests
    testImplementation project(':testscore')
    testImplementation "junit:junit:${versions.junit}"
    testImplementation "androidx.arch.core:core-testing:${versions.lifecycleLibraryTest}"

    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:${versions.spek}"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:${versions.spek}"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:${versions.kotlinTest}"
    testImplementation "io.mockk:mockk:${versions.mockk}"
}
